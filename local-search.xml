<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用 Hexo 与 GitHub Pages 搭建个人博客指南</title>
    <link href="/hexo-demo/2025/09/01/%E5%88%A9%E7%94%A8-Hexo-%E4%B8%8E-GitHub-Pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/"/>
    <url>/hexo-demo/2025/09/01/%E5%88%A9%E7%94%A8-Hexo-%E4%B8%8E-GitHub-Pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="1-前期准备与环境配置"><a href="#1-前期准备与环境配置" class="headerlink" title="1. 前期准备与环境配置"></a>1. 前期准备与环境配置</h2><p>开始之前，你需要准备好以下工具和账户，这是搭建博客的基础。</p><h3 id="1-1-所需工具与账户"><a href="#1-1-所需工具与账户" class="headerlink" title="1.1 所需工具与账户"></a>1.1 所需工具与账户</h3><ul><li><strong>GitHub 账户</strong>: 如果你还没有，请先去 <a href="https://github.com/">GitHub 官网</a> 注册一个。</li><li><strong>Node.js</strong>: Hexo 基于 Node.js，请从<a href="https://nodejs.org/">官网</a>下载 <strong>LTS（长期支持版本）</strong>。安装后，在终端或命令行中输入 <code>node -v</code> 和 <code>npm -v</code> 来检查是否安装成功。</li><li><strong>Git</strong>: 用于版本控制和部署。同样从<a href="https://git-scm.com/">官网</a>下载并安装。安装后，可通过 <code>git --version</code> 验证。</li></ul><h3 id="1-2-优化安装体验（可选）"><a href="#1-2-优化安装体验（可选）" class="headerlink" title="1.2 优化安装体验（可选）"></a>1.2 优化安装体验（可选）</h3><p>国内用户可以通过更换 npm 的镜像源来提升安装包的速度和稳定性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com<br></code></pre></td></tr></table></figure><h2 id="2-安装并初始化-Hexo"><a href="#2-安装并初始化-Hexo" class="headerlink" title="2. 安装并初始化 Hexo"></a>2. 安装并初始化 Hexo</h2><p>环境准备好后，我们就可以安装并创建你的博客项目了。</p><ol><li><p><strong>安装 Hexo CLI</strong> (命令行工具):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li><li><p><strong>创建博客项目</strong>:<br>选择一个你喜欢的目录，然后执行以下命令来初始化你的博客。<code>&lt;folder&gt;</code> 替换为你想要的博客文件夹名称，例如 <code>my-blog</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;folder&gt;<br><span class="hljs-built_in">cd</span> &lt;folder&gt;<br>npm install<br></code></pre></td></tr></table></figure></li><li><p><strong>本地预览</strong>:<br>完成初始化后，可以立即在本地启动服务器查看默认博客的样子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server <span class="hljs-comment"># 或简写为 hexo s</span><br></code></pre></td></tr></table></figure><p>在浏览器中访问 <code>http://localhost:4000</code>，你应该能看到默认的 Hexo 博客页面。</p></li></ol><h2 id="3-创建-GitHub-仓库并配置"><a href="#3-创建-GitHub-仓库并配置" class="headerlink" title="3. 创建 GitHub 仓库并配置"></a>3. 创建 GitHub 仓库并配置</h2><p>让你的博客能在互联网上访问的关键是 GitHub Pages。</p><ol><li><p><strong>创建仓库</strong>:</p><ul><li>登录 GitHub，点击右上角的 “+” -&gt; “New repository”。</li><li>选择仓库为 Public（公开）。</li><li>建议勾选 “Initialize this repository with a README”。</li></ul></li><li><p><strong>配置 SSH 密钥（推荐）</strong>:<br>使用 SSH 密钥可以与 GitHub 建立安全的连接，无需每次部署都输入密码。</p><ul><li><p><strong>生成密钥</strong>（在任意目录下打开 Git Bash 或终端执行）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li>按回车接受默认保存路径。</li><li>设置一个安全的密码（可直接回车留空，但不推荐）。</li></ul></li><li><p><strong>添加公钥到 GitHub</strong>:</p><ul><li>复制公钥内容（默认位于 <code>~/.ssh/id_ed25519.pub</code> 文件内）。</li><li>进入 GitHub Settings -&gt; SSH and GPG keys -&gt; New SSH key。</li><li>标题任意，将公钥内容粘贴到 “Key” 框中并保存。</li></ul></li></ul></li><li><p><strong>测试 SSH 连接</strong>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>看到 “You’ve successfully authenticated” 之类的欢迎信息即表示成功。</p></li></ol><h2 id="4-配置-Hexo-部署设置"><a href="#4-配置-Hexo-部署设置" class="headerlink" title="4. 配置 Hexo 部署设置"></a>4. 配置 Hexo 部署设置</h2><p>接下来，我们需要告诉 Hexo 如何将博客部署到刚才创建的 GitHub 仓库。</p><ol><li><p><strong>安装部署插件</strong>:<br>在你的博客根目录下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p><strong>修改博客配置文件</strong>:<br>用文本编辑器（<strong>切勿使用 Windows 记事本</strong>，推荐 VSCode、Sublime Text、Notepad++ 等）打开博客根目录下的 <code>_config.yml</code> 文件。滚动到文件最底部，找到 <code>deploy</code> 部分，并按如下格式修改（注意每个冒号后面的<strong>空格</strong>必不可少）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 部署配置</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">&lt;你的</span> <span class="hljs-string">SSH</span> <span class="hljs-string">仓库地址&gt;</span> <span class="hljs-comment"># 替换为你的 SSH 仓库地址</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span> <span class="hljs-comment"># 或 master，根据你的仓库默认主分支名称决定</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="搭建项目网站的注意事项"><a href="#搭建项目网站的注意事项" class="headerlink" title="搭建项目网站的注意事项"></a>搭建项目网站的注意事项</h3><p>在利用 Hexo 和 GitHub Pages 搭建个人博客时，你可以选择自定义一个仓库名称，例如 <code>hexo-demo</code>，但这会影响到你的博客访问地址。在发布后，你的博客网址是 <code>https://&lt;username&gt;.github.io/hexo-demo</code>。</p><p>此时，你需要修改 Hexo 配置文件 <code>_config.yml</code> 中的 <strong>url</strong> 和 <strong>root</strong> 参数，以确保正确的页面链接和资源加载。</p><p><strong><code>_config.yml</code> 修改示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## If your site is hosted at https://&lt;username&gt;.github.io/hexo-demo</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://&lt;username&gt;.github.io</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/hexo-demo/</span><br></code></pre></td></tr></table></figure><ul><li><strong>url</strong>: 设置为主域名 <code>https://username.github.io</code>。</li><li><strong>root</strong>: 设置为仓库名称 <code>/hexo-demo/</code>。</li></ul><h2 id="5-写作与部署"><a href="#5-写作与部署" class="headerlink" title="5. 写作与部署"></a>5. 写作与部署</h2><p>现在一切就绪，可以开始写你的第一篇博客并把它发布到网上！</p><ol><li><p><strong>创建新文章</strong>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;我的第一篇文章&quot;</span><br></code></pre></td></tr></table></figure><p>这条命令会在 <code>source/_posts</code> 目录下生成一个 Markdown 文件（例如 <code>我的第一篇文章.md</code>），用编辑器打开它就可以开始写作了。</p><p>Markdown 文件顶部有一块 <code>Front-matter</code>，用于设置文章属性：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 我的第一篇文章<br>date: 2025-09-01 14:00:00<br>categories: [日常]<br><span class="hljs-section">tags: [Hexo, 博客]</span><br><span class="hljs-section">---</span><br><br>这里是文章的摘要部分...<br>&lt;!--more--&gt;<br>这里是文章的正文内容，你可以使用 <span class="hljs-strong">**Markdown**</span> 语法进行写作。<br></code></pre></td></tr></table></figure></li><li><p><strong>生成并部署</strong>:<br>当你写完文章后，通过以下命令将博客部署到 GitHub Pages：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo deploy -g<br></code></pre></td></tr></table></figure><ul><li><code>hexo clean</code>: 清理缓存和旧文件。</li><li><code>hexo generate</code> (<code>hexo g</code>): 生成静态网页文件。</li><li><code>hexo deploy</code> (<code>hexo d</code>): 部署到远程仓库。</li></ul><p>你也可以使用组合命令 <code>hexo g -d</code> 来一次性完成生成和部署。</p></li><li><p><strong>访问你的博客</strong>:<br>部署完成后，等待一两分钟（GitHub 需要一点时间处理），然后在浏览器中访问 <code>https://你的用户名.github.io</code>，你就能看到在线博客了！🎉</p></li></ol><h2 id="6-基本命令速查表"><a href="#6-基本命令速查表" class="headerlink" title="6. 基本命令速查表"></a>6. 基本命令速查表</h2><p>为了方便记忆，这里汇总了 Hexo 的常用命令：</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><code>hexo new &quot;文章标题&quot;</code></td><td align="left">创建一篇新文章</td></tr><tr><td align="left"><code>hexo new page &quot;页面名&quot;</code></td><td align="left">创建一个新页面（如关于页）</td></tr><tr><td align="left"><code>hexo generate</code> (<code>hexo g</code>)</td><td align="left">生成静态网站文件</td></tr><tr><td align="left"><code>hexo server</code> (<code>hexo s</code>)</td><td align="left">启动本地服务器，用于预览</td></tr><tr><td align="left"><code>hexo deploy</code> (<code>hexo d</code>)</td><td align="left">部署到远程仓库（如 GitHub Pages）</td></tr><tr><td align="left"><code>hexo clean</code></td><td align="left">清除缓存文件和已生成的静态文件</td></tr></tbody></table><h2 id="7-进阶提示与常见问题"><a href="#7-进阶提示与常见问题" class="headerlink" title="7. 进阶提示与常见问题"></a>7. 进阶提示与常见问题</h2><ul><li><strong>关于主题</strong>: 默认主题可能比较简洁。你可以在<a href="https://hexo.io/themes/">Hexo 主题官网</a>探索大量第三方主题，安装通常只需 <code>git clone</code> 主题到 <code>themes</code> 目录，然后在 <code>_config.yml</code> 中修改 <code>theme</code> 字段即可。</li><li><strong>自定义域名</strong>: 如果你有自己的域名，可以在仓库根目录创建一个名为 <code>CNAME</code> 的文件（无后缀），里面写上你的域名（例如 <code>blog.yourname.com</code>），并在你的域名注册商处配置 DNS 解析即可。</li><li><strong>资源加载问题</strong>: 如果部署后发现样式、图片没加载出来，<strong>请首先检查 <code>_config.yml</code> 中的 <code>url</code> 和 <code>root</code> 设置是否正确</strong>，部署到子目录时 <code>root</code> 需要修改为 <code>/&lt;repository-name&gt;/</code>。</li><li><strong>保持更新</strong>: 建议将你的 Hexo 博客源文件（整个文件夹）也 push 到一个单独的私有 GitHub 仓库，这样既方便备份，也便于在多台设备上写作和同步。</li></ul><h3 id="更换主题的操作步骤"><a href="#更换主题的操作步骤" class="headerlink" title="更换主题的操作步骤"></a>更换主题的操作步骤</h3><p>这里以<code>fluid</code>主题为例进行说明：</p><h4 id="第一步：下载主题"><a href="#第一步：下载主题" class="headerlink" title="第一步：下载主题"></a>第一步：下载主题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:fluid-dev/hexo-theme-fluid.git  <span class="hljs-comment"># 可能快一些</span><br></code></pre></td></tr></table></figure><p>这会将 Fluid 主题下载并保存到 <code>themes/fluid</code> 文件夹下。如果你想使用其他主题，只需替换命令中的 URL 和文件夹名称即可。</p><h4 id="第二步：配置主题"><a href="#第二步：配置主题" class="headerlink" title="第二步：配置主题"></a>第二步：配置主题</h4><p>下载完成后，你需要告诉 Hexo 使用这个新主题。</p><p>打开你博客根目录下的主配置文件 <code>_config.yml</code>（注意：是博客根目录的，不是主题文件夹里的）。找到 <code>theme</code> 字段，将它的值改为你新下载的主题文件夹的名称。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 将这里的 landscape 改成 fluid</span><br></code></pre></td></tr></table></figure><h4 id="第三步：部署博客"><a href="#第三步：部署博客" class="headerlink" title="第三步：部署博客"></a>第三步：部署博客</h4><p>本地测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>部署到Github Pages：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo deploy -g<br></code></pre></td></tr></table></figure><hr><p>希望这份指南能帮助你顺利搭建起自己的博客！如果遇到问题，Hexo 的官方文档和社区通常是寻找答案的好地方。享受写作和分享的乐趣吧！</p><blockquote><p>with the help of Deepseek and Gemini</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Github Pages</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/hexo-demo/2025/09/01/hello-world/"/>
    <url>/hexo-demo/2025/09/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
